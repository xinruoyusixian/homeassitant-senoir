import ssd1306,time
class display(ssd1306.SSD1306_I2C):
    def __init__(self,i2c,w=128,h=64):
      # using default address 0x3C
      self.i2c =i2c
      self.oled = super().__init__(w, h, i2c)
      self.font={
      "0":[[0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00],[0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00]],#"0",0*/
      "1":[[0x00,0x00,0x10,0x10,0xF8,0x00,0x00,0x00],[0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00]],#"1",0*/
      "2":[[0x00,0x70,0x08,0x08,0x08,0x08,0xF0,0x00],[0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00]],#"2",0*/
      "3":[[0x00,0x30,0x08,0x08,0x08,0x88,0x70,0x00],[0x00,0x18,0x20,0x21,0x21,0x22,0x1C,0x00]],#"3",0*/
      "4":[[0x00,0x00,0x80,0x40,0x30,0xF8,0x00,0x00],[0x00,0x06,0x05,0x24,0x24,0x3F,0x24,0x24]],#"4",0*/
      "5":[[0x00,0xF8,0x88,0x88,0x88,0x08,0x08,0x00],[0x00,0x19,0x20,0x20,0x20,0x11,0x0E,0x00]],#"5",0*/
      "6":[[0x00,0xE0,0x10,0x88,0x88,0x90,0x00,0x00],[0x00,0x0F,0x11,0x20,0x20,0x20,0x1F,0x00]],#"6",0*/
      "7":[[0x00,0x18,0x08,0x08,0x88,0x68,0x18,0x00],[0x00,0x00,0x00,0x3E,0x01,0x00,0x00,0x00]],#"7",0*/
      "8":[[0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00],[0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00]],#"8",0*/
      "9":[[0x00,0xF0,0x08,0x08,0x08,0x10,0xE0,0x00],[0x00,0x01,0x12,0x22,0x22,0x11,0x0F,0x00]],#"9",0*/
      "10":[[0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00],[0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00]],#":",0*/
      "/":[[0x00,0x00,0x00,0x00,0xC0,0x38,0x04,0x00],[0x00,0x60,0x18,0x07,0x00,0x00,0x00,0x00]],#"/",0*/

      ".":[[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],[0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00]],#*".",0*/

      "-":[[0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00],[0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x00]],#"-",0*/
      "%":[[0xF0,0x08,0xF0,0x80,0x60,0x18,0x00,0x00],[0x00,0x31,0x0C,0x03,0x1E,0x21,0x1E,0x00]],#"%",0*/
      "ssd":[[0x06,0x09,0x09,0xE6,0xF8,0x0C,0x04,0x02,0x02,0x02,0x02,0x02,0x04,0x1E,0x00,0x00],
      [0x00,0x00,0x00,0x07,0x1F,0x30,0x20,0x40,0x40,0x40,0x40,0x40,0x20,0x10,0x00,0x00]],#"℃",0*/
      "wen":[[0x10,0x60,0x02,0x8C,0x00,0x00,0xFE,0x92,0x92,0x92,0x92,0x92,0xFE,0x00,0x00,0x00],
      [0x04,0x04,0x7E,0x01,0x40,0x7E,0x42,0x42,0x7E,0x42,0x7E,0x42,0x42,0x7E,0x40,0x00]],#"温",0*/
      "du":[[0x00,0x00,0xFC,0x24,0x24,0x24,0xFC,0x25,0x26,0x24,0xFC,0x24,0x24,0x24,0x04,0x00],
      [0x40,0x30,0x8F,0x80,0x84,0x4C,0x55,0x25,0x25,0x25,0x55,0x4C,0x80,0x80,0x80,0x00]],#"度",0*/
      "shi":[[0x10,0x60,0x02,0x8C,0x00,0xFE,0x92,0x92,0x92,0x92,0x92,0x92,0xFE,0x00,0x00,0x00],
      [0x04,0x04,0x7E,0x01,0x44,0x48,0x50,0x7F,0x40,0x40,0x7F,0x50,0x48,0x44,0x40,0x00]], #"湿",0*/
      "wifi":[
          [0x0C,0x06,0x12,0x13,0x5B,0xDB,0xDB,0xDB,0x5B,0x13,0x12,0x06,0x0C],
          [0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00]],
      "ap":[
          [0xF8,0xAC,0x02,0xF9,0x8C,0x70,0xF8,0x70,0x8C,0xF9,0x02,0xAC,0xF8],
          [0x00,0x01,0x02,0x04,0x01,0x00,0x3F,0x00,0x01,0x04,0x02,0x01,0x00]]
      }

      self.posx=10
      self.poxy=14

#清屏 可带参数清除指定区域 [0,127,0,8]  (0,127) 宽度,(0,8)是高度  1个高度是8像素 




    def draw_ui(self):
          pass


      
    def display(self,tempt="19.90",humid="32.62",_type="t",net="wifi",func=None):
      self.fill(0)
      h,m,s=(time.localtime()[3],time.localtime()[4],time.localtime()[5])
      if func != None:
        that=self
        func(that)
      else:
        self.text("%02d:%02d:%02d"%(h,m,s),30,5)
      if net=="wifi":
        self.newBuffer(self.font['wifi'],112,3)
      if net=="ap":
        self.newBuffer(self.font['ap'],112,3)
      if _type=="t":
        self.newBuffer(self.font['wen'],self.posx,self.poxy)
        self.newBuffer(self.font['ssd'],self.posx+90,self.poxy)
        num=tempt
      if _type=="h": 
        self.newBuffer(self.font['shi'],self.posx,self.poxy)
        self.newBuffer(self.font['%'],self.posx+95,self.poxy)
        num=humid
      self.newBuffer(self.font['du'],self.posx+20,self.poxy)

      self.newBuffer(self.font[num[0]],self.posx+40,self.poxy)
      self.newBuffer(self.font[num[1]],self.posx+50,self.poxy)
      self.newBuffer(self.font[num[2]],self.posx+60,self.poxy)
      self.newBuffer(self.font[num[3]],self.posx+70,self.poxy)
      self.newBuffer(self.font[num[4]],self.posx+80,self.poxy)





      # self.newBuffer(self.font['shi'],self.posx,self.poxy+20)
      # self.newBuffer(self.font['du'],self.posx+20,self.poxy+20)
      # self.newBuffer(self.font['ssd'],self.posx+90,self.poxy)
      # self.newBuffer(self.font['%'],self.posx+95,self.poxy+20)

      # self.newBuffer(self.font[humid[0]],self.posx+40,self.poxy+20)
      # self.newBuffer(self.font[humid[1]],self.posx+50,self.poxy+20)
      # self.newBuffer(self.font[humid[2]],self.posx+60,self.poxy+20)
      # self.newBuffer(self.font[humid[3]],self.posx+70,self.poxy+20)
      # self.newBuffer(self.font[humid[4]],self.posx+80,self.poxy+20)

      if s>30:
        self.invert(0)
      else:
        self.invert(1)
      self.rect(1,1,126,30,1)
      self.show()
if __name__ == "__main__":
  import lib
  from machine import I2C ,Pin
  i2c = I2C(scl=Pin(5), sda=Pin(4), freq=1000000)
  oled=display(i2c)
  oled.text("connecting wifi...",0,10)
  oled.show()
  time.sleep(1)
  wifi=lib.wifi("PDCN_2.4G","1234567788",'test')
  if wifi[1]:
        oled.text("connected",2,20)
        oled.text("%s"%wifi[0].ifconfig()[0],0,30)
        oled.show()
  oled.fill(0)
  time.sleep(3)
  while 1:
      oled.display(net="ap")




